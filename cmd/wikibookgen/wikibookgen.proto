syntax = "proto3";

package wikibookgen;

option go_package = "github.com/proullon/wikibookgen/api";

import "google/api/annotations.proto";

/*
** GET  /status
** POST /order
** POST /complete
** GET  /order/{uuid}
** GET  /wikibook
** GET  /wikibook/{uuid}
** GET  /wikibook/{uuid}/download?format={format}
** GET  /wikibook/{uuid}/download/format
** POST /wikibook/{uuid}/print/{format}
*/
service wikibookgen {

  rpc Status (Void) returns (StatusResponse) {
    option (google.api.http) ={
      get: "/status"
    };  
  }

  rpc Complete(CompleteRequest) returns (CompleteResponse) {
    option (google.api.http) ={
      post: "/complete"
    };
  }

  rpc Order(OrderRequest) returns (OrderResponse) {
    option (google.api.http) ={
      post: "/order"
    };
  }

  rpc OrderStatus(OrderStatusRequest) returns (OrderStatusResponse) {
    option (google.api.http) ={
      get: "/order/{uuid}"
    };
  }

  rpc ListWikibook(ListWikibookRequest) returns (ListWikibookResponse) {
    option (google.api.http) ={
      get: "/wikibook?page={page}&size={size}&language={language}"
    };
  }

  rpc GetWikibook(GetWikibookRequest) returns (GetWikibookResponse) {
    option (google.api.http) ={
      get: "/wikibook/{uuid}"
    };
  }

  rpc GetAvailableDownloadFormat(GetAvailableDownloadFormatRequest) returns (GetAvailableDownloadFormatResponse) {
    option (google.api.http) ={
      get: "/wikibook/{uuid}/download/format"
    };
  }

  rpc DownloadWikibook(DownloadWikibookRequest) returns (Void) {
    option (google.api.http) ={
      get: "/wikibook/{uuid}/download?format={format}"
    };
  }

  rpc PrintWikibook(PrintWikibookRequest) returns (Void) {
    option (google.api.http) ={
      post: "/wikibook/{uuid}/print/{format}"
    };
  }
}

message Wikibook {
  string          uuid = 1;
  string          subject = 2;
  string          model = 3;
  string          language = 4;
  string          title = 5;
  int64           pages = 6;
  repeated Volume volumes = 7;
  string          generation_date = 8;
}

message Volume {
  string           title = 1;
  repeated Chapter chapters = 2;
}

message Chapter {
  string           title = 1;
  repeated Page articles = 2;
}

message Page {
  int64  id      = 1;
  string title   = 2;
  string content = 3;
}

message StatusResponse {
  repeated string status = 1;
}

message Void {
}

message OrderRequest {
  string subject  = 1;
  string model    = 2;
  string language = 3;
}

message OrderResponse {
  string uuid = 1;
}

message OrderStatusRequest {
  string uuid = 1;
}

message OrderStatusResponse {
  string status = 1;
  string wikibook_uuid = 2;
}

message CompleteRequest {
  string value    = 1;
  string language = 2;
}

message CompleteResponse {
  repeated string titles = 1;
}

message GetWikibookRequest {
  string uuid = 1;
}

message GetWikibookResponse {
  Wikibook wikibook = 1;
}

message ListWikibookRequest {
  int64 page      = 1;
  int64 size      = 2;
  string language = 3;
}

message ListWikibookResponse {
  repeated Wikibook wikibooks = 1;
}

message DownloadWikibookRequest {
  string uuid = 1;
  string format = 2;
}

message GetAvailableDownloadFormatRequest {
  string uuid = 1;
}

message GetAvailableDownloadFormatResponse {
  bool epub = 1;
  bool pdf = 2;
}

message PrintWikibookRequest {
  string uuid = 1;
  string format = 2;
}
